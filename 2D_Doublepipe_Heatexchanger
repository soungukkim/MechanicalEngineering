import numpy as np
import matplotlib.pyplot as plt


L = 60
r1 = 0.1
r2 = 0.15
n = 100
m1 = 3
Cp1 = 4180
rho1 = 1000

m2 = 5
Cp2 = 4180
rho2 = 1000
pi = 3.14159
Ac1 = pi * r1 ** 2
Ac2 = pi * (r2 ** 2 - r1 ** 2)

T1i = 400
T2i = 800
T0 = 300

U = 340
dx = L / n

t_final = 1000
dt = 1

x = np.linspace(dx / 2, L - dx / 2, n)

T1 = np.ones(n) * T0
T2 = np.ones(n) * T0

dT1dt = np.zeros(n)
dT2dt = np.zeros(n)

t = np.arange(0, t_final, dt)

for j in range(1, len(t)):
    plt.ion()
    plt.clf()

    dT1dt[1:n] = (m1 * Cp1 * (T1[0:n - 1] - T1[1:n]) + U * 2 * pi * r1 * dx * (T2[1:n] - T1[1:n])) / (
                rho1 * Cp1 * dx * Ac1)
    dT1dt[0] = (m1 * Cp1 * (T1i - T1[0]) + U * 2 * pi * r1 * dx * (T2[0] - T1[0])) / (rho1 * Cp1 * dx * Ac1)

    dT2dt[1:n] = (m2 * Cp2 * (T2[0:n - 1] - T2[1:n]) + U * 2 * pi * r1 * dx * (T2[1:n] - T2[1:n])) / (
                rho2 * Cp2 * dx * Ac2)
    dT2dt[0] = (m2 * Cp2 * (T2i - T2[0]) + U * 2 * pi * r2 * dx * (T2[0] - T1[0])) / (rho2 * Cp2 * dx * Ac2)

    T1 = T1 + dT1dt * dt
    T2 = T2 + dT2dt * dt

    plt.figure(1)
    plt.plot(x, T1, color='blue', label="Inside")
    plt.plot(x, T2, color='red', label="Outside")
    plt.axis([0, L, 298, 820])
    plt.xlabel("Distance(m)")
    plt.ylabel("Temperature(K)")
    plt.legend(loc="upper right")
    plt.show()
    plt.pause(0.005)
